version: "3.8"

services:
  db:
    image: postgres:16.1-alpine
    restart: always
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
      POSTGRES_DB: database
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - app-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U user -d database"]
      interval: 5s
      timeout: 5s
      retries: 10

  redis:
    image: redis:7.2-alpine
    ports:
      - "6379:6379"
    restart: always
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 5s
      retries: 5

  minio:
    image: minio/minio
    container_name: cms_minio
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin
    ports:
      - "9000:9000"
      - "9001:9001"
    command: server /data --console-address ":9001"
    volumes:
      - miniodata:/data
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 10s
      timeout: 5s
      retries: 5

  cms-service:
    build:
      context: ./services/
      dockerfile: Dockerfile
    ports:
      - "3001:3000"
    environment:
      # Database
      DB_HOST: db
      DB_PORT: 5432
      DB_USERNAME: user
      DB_PASSWORD: password
      DB_NAME: database

      # Redis
      REDIS_HOST: redis
      REDIS_PORT: 6379

      # JWT
      JWT_ACCESS_SECRET: my_secret_secret
      JWT_ACCESS_EXPIRES_IN: 3600
      JWT_REFRESH_SECRET: my_secret_secret
      JWT_REFRESH_EXPIRES_IN: 604800
      JWT_SECRET: my_secret_secret

      # AWS S3 (MinIO)
      AWS_REGION: us-east-1
      AWS_ACCESS_KEY_ID: minioadmin
      AWS_SECRET_ACCESS_KEY: minioadmin
      AWS_BUCKET_NAME: my-bucket
      AWS_ENDPOINT: http://minio:9000
      AWS_FORCE_PATH_STYLE: "true"

      # App
      NODE_ENV: development

      # TypeORM (optional, for compatibility)
      TYPEORM_HOST: db
      TYPEORM_PORT: 5432
      TYPEORM_USERNAME: user
      TYPEORM_PASSWORD: password
      TYPEORM_DATABASE: database
      TYPEORM_SYNCHRONIZE: "true"
      TYPEORM_LOGGING: "true"
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
      minio:
        condition: service_healthy
    restart: unless-stopped
    networks:
      - app-network

volumes:
  postgres_data:
  miniodata:

networks:
  app-network:
    driver: bridge
